# Use Python 3.11.9 slim image as base
FROM python:3.11.9-slim

# Set working directory
WORKDIR /app

# Install system dependencies including FFmpeg and Rust toolchain
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libavcodec-extra \
    libavformat-dev \
    libavutil-dev \
    libswresample-dev \
    libswscale-dev \
    pkg-config \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Rust (needed for some Python packages)
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Set environment variables for Rust/Cargo
ENV CARGO_HOME="/app/.cargo"
ENV RUSTUP_HOME="/app/.rustup"
ENV PIP_CACHE_DIR="/tmp/pip-cache"

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --prefer-binary -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /tmp/audio_uploads /tmp/audio_processing && \
    chmod 755 /tmp/audio_uploads /tmp/audio_processing

# Expose port
EXPOSE 10000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:10000/health || exit 1

# Run the application
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "10000"] 